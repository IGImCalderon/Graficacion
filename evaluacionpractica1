import cv2 as cv
import math

rostro = cv.CascadeClassifier('haarcascade_frontalface_alt.xml')
cap = cv.VideoCapture(0)

t = 0
while True:
    ret, img = cap.read()
    if not ret:
        break

    gris = cv.cvtColor(img, cv.COLOR_BGR2GRAY)
    rostros = rostro.detectMultiScale(gris, 1.3, 5)

    for (x, y, w, h) in rostros:
        # movimiento de ojos con seno
        mov = int(math.sin(t) * (w * 0.03))

        # ojos (blancos)
        cv.circle(img, (x + int(w*0.3), y + int(h*0.4)), int(w*0.1), (255, 255, 255), -1)
        cv.circle(img, (x + int(w*0.7), y + int(h*0.4)), int(w*0.1), (255, 255, 255), -1)

        # pupilas (se mueven)
        cv.circle(img, (x + int(w*0.3) + mov, y + int(h*0.4)), int(w*0.04), (0, 0, 0), -1)
        cv.circle(img, (x + int(w*0.7) + mov, y + int(h*0.4)), int(w*0.04), (0, 0, 0), -1)

        # boca (rect√°ngulo)
        cv.rectangle(img, (x + int(w*0.3), y + int(h*0.7)),
                     (x + int(w*0.7), y + int(h*0.8)), (0, 0, 255), -1)

        # lengua (sube y baja)
        alt = int(abs(math.sin(t*1.5)) * (h*0.05))
        cv.rectangle(img, (x + int(w*0.45), y + int(h*0.8) - alt),
                     (x + int(w*0.55), y + int(h*0.9) - alt), (100, 0, 255), -1)

    cv.imshow("img", img)
    t += 0.1
    if cv.waitKey(1) == ord("q"):
        break

cap.release()
cv.destroyAllWindows()
